File: semgrep-grammars/src/tree-sitter-swift/LICENSE
Git repo name: tree-sitter-swift
Latest commit in repo: c61122ad66daf4c878a392470ff4a364256878bf
Last change in file:
  commit 90cd9604a7db32fbec45a040a7bdb6aaa89b565c
  gpg: Signature made Sat 14 Aug 2021 09:10:20 AM PDT
  gpg:                using RSA key 4AEE18F83AFDEB23
  gpg: Good signature from "GitHub (web-flow commit signing) <noreply@github.com>" [full]
  Author: alex-pinkus <62194897+alex-pinkus@users.noreply.github.com>
  Date:   Sat Aug 14 09:10:20 2021 -0700
  
      Initial commit
---
File: semgrep-grammars/src/tree-sitter-swift/grammar.js
Git repo name: tree-sitter-swift
Latest commit in repo: c61122ad66daf4c878a392470ff4a364256878bf
Last change in file:
  commit 074f82ffae7344caffd5850520f95ac66ee57133
  Author: Alex Pinkus <alex.pinkus@gmail.com>
  Date:   Sun May 8 15:23:33 2022 -0700
  
      Simplify pattern rules
      
      This change loosens pattern validity requirements for the sake of
      greatly simplifying the grammar.
      
      This isn't going to be backwards compatible, so it also takes the
      opportunity to reduce the user-visible pattern nodes down to just a
      top-level `pattern` (repeated for any nested tuple patterns or
      otherwise.
      
      By removing `generate_pattern_matching_rule`, we cut down significantly
      on duplication, and nearly halve the number of valid states. This should
      improve query parsing time and hopefully simplify integration for the
      semgrep folks.
      
      This also fixes some pattern matching bugs where code that was treated
      as invalid is actually valid.
---
File: semgrep-grammars/src/semgrep-swift/grammar.js
Git repo name: ocaml-tree-sitter-semgrep
Latest commit in repo: fe67dac8bfbbda4be37e2535a99cdd309ba33a49
Last change in file:
  commit 4970334dd35b20d443f2ee6b5d7936e972bd6112
  gpg: Signature made Tue 10 May 2022 04:28:01 PM PDT
  gpg:                using RSA key C1930C5F9C9E0472DCF9ECC97D71116F505E5145
  gpg: Good signature from "Nathaniel Mote <nat@r2c.dev>" [ultimate]
  gpg:                 aka "Nathaniel Mote <nat@natmote.net>" [ultimate]
  Author: Nat Mote <nat@r2c.dev>
  Date:   Tue May 10 11:04:04 2022 -0700
  
      feat(swift): Parse semgrep_ellipsis
      
      This introduces a `semgrep_ellipsis` rule that is a valid expression. It
      conflicts with the existing unbounded range operator. This conflict is
      resolved as described in the comment.
      
      Test plan:
      
      Existing tests ensure that unbounded ranges are parsed as they used to
      be. The added tests make that clear, and also demonstrate a case where
      an ellipsis is now parsed. That example used to be a parse error.
---
