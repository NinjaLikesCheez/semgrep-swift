File: semgrep-grammars/src/tree-sitter-swift/LICENSE
Git repo name: tree-sitter-swift
Latest commit in repo: 597d544b3c93b2f67d2e143f27cc51ba874ec5c3
Last change in file:
  commit 90cd9604a7db32fbec45a040a7bdb6aaa89b565c
  Author: alex-pinkus <62194897+alex-pinkus@users.noreply.github.com>
  Date:   Sat Aug 14 09:10:20 2021 -0700
  
      Initial commit
---
File: semgrep-grammars/src/tree-sitter-swift/grammar.js
Git repo name: tree-sitter-swift
Latest commit in repo: 597d544b3c93b2f67d2e143f27cc51ba874ec5c3
Last change in file:
  commit 597d544b3c93b2f67d2e143f27cc51ba874ec5c3
  Author: Alex Pinkus <pinkus@amazon.com>
  Date:   Sun Oct 8 16:26:24 2023 -0700
  
      Loosen the restrictions around directly assignable expressions
      
      We currently only allow a subset of expressions to be used as the target
      of assignment. The Swift compiler also only allows a subset, but keeping
      track of their subset is hard. For example, in #321 we see that an
      optional expression can be used for assignment but we don't currently
      support that.
      
      Let's get out of that game. All expressions can be assignments now!
      Sure, that doesn't work for the real swift compiler, but that's not our
      circus, and furthermore, not our monkeys.
---
File: semgrep-grammars/src/semgrep-swift/grammar.js
Git repo name: ocaml-tree-sitter-semgrep
Latest commit in repo: 1a167cfef687a3745d513a3b00a85f16d047c2a0
Last change in file:
  commit 32f3fd22446cab32d4a6a0a08f34a4f0b03abe0a
  Author: Heejong Lee <heejong@gmail.com>
  Date:   Tue May 16 17:30:10 2023 -0700
  
      swift: Support named ellipsis
      
      returntocorp/semgrep#7666
---
